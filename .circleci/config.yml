# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          - v1-dependencies-
      #- run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn compile
      # run tests!
      #- run: mvn integration-test
      - persist_to_workspace:
          root: ~/repo
          paths: "."

  deploy_to_env:
      working_directory: ~/repo
      docker:
        - image: circleci/python:3.6.1
      steps:
        - checkout
        - run:
            name: deploy to env status
            command: |
              sudo pip install --upgrade pip
              sudo pip install requests
              export CIRCLE_TAG="ENV-PLAT"
              python .circleci/svs_api_status.py

  apitest:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: clone api-integration-tests
          command: |
              mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
              git clone -b master git@github.com:maximinogomez/api-integration-tests.git
      - run:
          name: compile api-tests
          working_directory: ~/repo/api-integration-tests
          command: |
              echo "configuring workspace"
              curl -O http://apache.spinellicreations.com/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.zip
              unzip apache-maven-3.5.3-bin.zip
              echo $JAVA_HOME
              export PATH=./apache-maven-3.5.3/bin:$PATH
              echo $PATH
              apache-maven-3.5.3/bin/mvn -v
              apache-maven-3.5.3/bin/mvn compile
      - run:
          name: run api-tests
          working_directory: ~/repo/api-integration-tests
          command: apache-maven-3.5.3/bin/mvn test

workflows:
  version: 2
  build_deploy_test:
    jobs:
      - build
      - deploy_to_env:
          requires:
            - build
      - apitest:
          requires:
            - deploy_to_env
